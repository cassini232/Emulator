 8080 PLM1 VERS 2.0
                   
 00001  1   /*
 00002  1           A STANDALONE MONITOR FOR CP/M EMULATION SYSTEM
 00003  1
 00004  1           THIS PROGRAM WAS WRITTEN FOR THE INTEL PL/M-80 CROSS COMPILER
 00005  1
 00006  1           1.0 07/17/2008 UDO MUNK         INITIAL VERSION
 00007  1   */
 00008  1
 00009  1   3800H:         /* ORIGIN OF PROGRAM */
 00010  1
 00011  1   DECLARE        /* 8080 INSTRUCTION DATA AT ORIGIN + 6 */
 00012  1       STOP DATA (0F3H,076H);              /* DI, HLT INSTRUCTIONS, STOPS EMU */
 00013  1
 00014  1   DECLARE         /* ASCII CONSTANTS */
 00015  1       TAB         LITERALLY '9',          /* HORIZONTAL TABULATOR */
 00016  1       CR          LITERALLY '13',         /* CARRIAGE RETURN */
 00017  1       LF          LITERALLY '10',         /* LINEFEED */
 00018  1       ESC         LITERALLY '27',         /* ESCAPE */
 00019  1       LBRA        LITERALLY '91';         /* LEFT BRACKET */
 00020  1
 00021  1   DECLARE         /* I/O PORTS */
 00022  1       CON$DATA    LITERALLY '1';          /* CONSOLE DATA PORT */
 00023  1
 00024  1   DECLARE         /* MESSAGES */
 00025  1       CLS    DATA (ESC,LBRA,'H',ESC,LBRA,'2J',0),  /* VT100 CLEAR SCREEN */
 00026  1       NL     DATA (CR,LF,0),
 00027  1       TITLE1 DATA (TAB,TAB,TAB,'--------------------------',CR,LF,0),
 00028  1       TITLE2 DATA (TAB,TAB,TAB,'--- STANDALONE MONITOR ---',CR,LF,0),
 00029  1       TITLE3 DATA (TAB,TAB,TAB,'--------------------------',CR,LF,0),
 00030  1       TITLE4 DATA (TAB,TAB,TAB,'COPYRIGHT 2008 BY UDO MUNK',CR,LF,0);
 00031  1
 00032  1   /* STOP EMULATION */
 00033  1   STOP$EMU: PROCEDURE;
 00034  2       GOTO 3806H;
 00035  2   END STOP$EMU;
 00036  1
 00037  1   /* PRINT 0 TERMINATED STRING TO CONSOLE */
 00038  1   PRTSTR: PROCEDURE(STR);
 00039  2       DECLARE STR ADDRESS;
 00040  2       DECLARE S BASED STR BYTE;
 00041  2       DECLARE I BYTE;
 00042  2       I = 0;
 00043  2       DO WHILE S(I) <> 0;
 00044  2           OUTPUT(CON$DATA) = S(I);
 00045  3           I = I + 1;
 00046  3       END;
 00047  2   END PRTSTR;
 00048  1
 00049  1   /* PRINT N NEWLINES TO CONSOLE */
 00050  1   PRTNL: PROCEDURE(N);
 00051  2       DECLARE N BYTE;
 00052  2       DECLARE I BYTE;
 00053  2       DO I = 0 TO N;
 00054  2           CALL PRTSTR(.NL);
 00055  3       END;
 00056  2   END PRTNL;
 00057  1
 00058  1   /* MAIN PROGRAM */
 00059  1   DO;
 00060  1       /* PRINT TITLE */
 00061  1       CALL PRTSTR(.CLS);
 00062  2       CALL PRTSTR(.TITLE1);
 00063  2       CALL PRTSTR(.TITLE2);
 00064  2       CALL PRTSTR(.TITLE3);
 00065  2       CALL PRTSTR(.TITLE4);
 00066  2       CALL PRTNL(2);
 00067  2
 00068  2       /* STOP EMULATOR */
 00069  2       CALL STOP$EMU;
 00070  2   END;
 00071  1
 00072  1   EOF
 NO PROGRAM ERRORS
  
