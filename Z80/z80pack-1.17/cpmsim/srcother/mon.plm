/*
        A STANDALONE MONITOR FOR CP/M EMULATION SYSTEM

        THIS PROGRAM WAS WRITTEN FOR THE INTEL PL/M-80 CROSS COMPILER

        1.0 07/17/2008 UDO MUNK         INITIAL VERSION
*/

3800H:         /* ORIGIN OF PROGRAM */

DECLARE        /* 8080 INSTRUCTION DATA AT ORIGIN + 6 */
    STOP DATA (0F3H,076H);              /* DI, HLT INSTRUCTIONS, STOPS EMU */

DECLARE         /* ASCII CONSTANTS */
    TAB         LITERALLY '9',          /* HORIZONTAL TABULATOR */
    CR          LITERALLY '13',         /* CARRIAGE RETURN */
    LF          LITERALLY '10',         /* LINEFEED */
    ESC         LITERALLY '27',         /* ESCAPE */
    LBRA        LITERALLY '91';         /* LEFT BRACKET */

DECLARE         /* I/O PORTS */
    CON$DATA    LITERALLY '1';          /* CONSOLE DATA PORT */

DECLARE         /* MESSAGES */
    CLS    DATA (ESC,LBRA,'H',ESC,LBRA,'2J',0),  /* VT100 CLEAR SCREEN */
    NL     DATA (CR,LF,0),
    TITLE1 DATA (TAB,TAB,TAB,'--------------------------',CR,LF,0),
    TITLE2 DATA (TAB,TAB,TAB,'--- STANDALONE MONITOR ---',CR,LF,0),
    TITLE3 DATA (TAB,TAB,TAB,'--------------------------',CR,LF,0),
    TITLE4 DATA (TAB,TAB,TAB,'COPYRIGHT 2008 BY UDO MUNK',CR,LF,0);

/* STOP EMULATION */
STOP$EMU: PROCEDURE;
    GOTO 3806H;
END STOP$EMU;

/* PRINT 0 TERMINATED STRING TO CONSOLE */
PRTSTR: PROCEDURE(STR);
    DECLARE STR ADDRESS;
    DECLARE S BASED STR BYTE;
    DECLARE I BYTE;
    I = 0;
    DO WHILE S(I) <> 0;
        OUTPUT(CON$DATA) = S(I);
        I = I + 1;
    END;
END PRTSTR;

/* PRINT N NEWLINES TO CONSOLE */
PRTNL: PROCEDURE(N);
    DECLARE N BYTE;
    DECLARE I BYTE;
    DO I = 0 TO N;
        CALL PRTSTR(.NL);
    END;
END PRTNL;

/* MAIN PROGRAM */
DO;
    /* PRINT TITLE */
    CALL PRTSTR(.CLS);
    CALL PRTSTR(.TITLE1);
    CALL PRTSTR(.TITLE2);
    CALL PRTSTR(.TITLE3);
    CALL PRTSTR(.TITLE4);
    CALL PRTNL(2);

    /* STOP EMULATOR */
    CALL STOP$EMU;
END;

EOF
