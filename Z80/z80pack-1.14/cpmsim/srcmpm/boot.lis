Z80-Assembler		Release 1.5				Page 1
Source file: boot.asm
Title:       

LOC   OBJECT CODE   LINE   STMT SOURCE CODE
                       1      1 ;	MP/M 2 boot-loader for Z80-Simulator
                       2      2 ;
                       3      3 ;	Copyright (C) 1989-2007 by Udo Munk
                       4      4 ;
                       5      5 	ORG	0		;mem base of boot
                       6      6 ;
0100                   7      7 BOOT	EQU	0100H		;cpmldr runs at 0100H
0033                   8      8 SECTS	EQU	51		;# of sectors to load (26 * 2 - 1)
                       9      9 ;
                      10     10 ;	I/O ports
                      11     11 ;
0001                  12     12 CONDAT	EQU	1		;console data port
000a                  13     13 DRIVE   EQU	10		;fdc-port: # of drive
000b                  14     14 TRACK   EQU	11		;fdc-port: # of track
000c                  15     15 SECTOR  EQU	12		;fdc-port: # of sector
000d                  16     16 FDCOP   EQU	13		;fdc-port: command
000e                  17     17 FDCST   EQU	14		;fdc-port: status
000f                  18     18 DMAL    EQU	15		;dma-port: dma address low
0010                  19     19 DMAH    EQU	16		;dma-port: dma address high
                      20     20 ;
0000  c3 19 00        21     21 	JP	COLD
                      22     22 ;
0003  42 4f 4f 54     23     23 ERRMSG:	DEFM	'BOOT: error booting'
0007  3a 20 65 72     23     24
000b  72 6f 72 20     23     25
000f  62 6f 6f 74     23     26
0013  69 6e 67        23     27
0016  0d 0a 00        24     28 	DEFB	13,10,0
                      25     29 ;
                      26     30 ;	begin the load operation
                      27     31 ;
0019  01 02 00        28     32 COLD:	LD	BC,2		;b=track 0, c=sector 2
001c  16 33           29     33 	LD	D,SECTS		;d=# sectors to load
001e  21 00 01        30     34 	LD	HL,BOOT		;base transfer address
0021  3e 00           31     35 	LD	A,0		;select drive A
0023  d3 0a           32     36 	OUT	(DRIVE),A
                      33     37 ;
                      34     38 ;	load the next sector
                      35     39 ;
0025  78              36     40 LSECT:	LD	A,B		;set track
0026  d3 0b           37     41 	OUT	(TRACK),A
0028  79              38     42 	LD	A,C		;set sector
0029  d3 0c           39     43 	OUT	(SECTOR),A
002b  7d              40     44 	LD	A,L		;set dma address low
002c  d3 0f           41     45 	OUT	(DMAL),A
002e  7c              42     46 	LD	A,H		;set dma address high
002f  d3 10           43     47 	OUT	(DMAH),A
0031  af              44     48 	XOR	A		;read sector
0032  d3 0d           45     49 	OUT	(FDCOP),A
0034  db 0e           46     50 	IN	A,(FDCST)	;get status of fdc
0036  b7              47     51 	OR	A		;read successful ?
0037  ca 4a 00        48     52 	JP	Z,CONT		;yes, continue
003a  21 03 00        49     53 	LD	HL,ERRMSG	;no, print error
003d  7e              50     54 PRTMSG:	LD	A,(HL)
003e  b7              51     55 	OR	A
003f  ca 48 00        52     56 	JP	Z,STOP
0042  d3 01           53     57 	OUT	(CONDAT),A
0044  23              54     58 	INC	HL
0045  c3 3d 00        55     59 	JP	PRTMSG
0048  f3              56     60 STOP:	DI
Z80-Assembler		Release 1.5				Page 2
Source file: boot.asm
Title:       

LOC   OBJECT CODE   LINE   STMT SOURCE CODE
0049  76              57     61 	HALT			;and halt cpu
                      58     62 ;
                      59     63 CONT:
                      60     64 				;go to next sector if load is incomplete
004a  15              61     65 	DEC	D		;sects=sects-1
004b  ca 00 01        62     66 	JP	Z,BOOT		;head for the bios
                      63     67 ;
                      64     68 ;	more sectors to load
                      65     69 ;
                      66     70 ;	we aren't using a stack, so use <sp> as scratch register
                      67     71 ;	to hold the load address increment
                      68     72 ;
004e  31 80 00        69     73 	LD	SP,128		;128 bytes per sector
0051  39              70     74 	ADD	HL,SP		;<hl> = <hl> + 128
                      71     75 ;
0052  0c              72     76 	INC	C		;sector = sector + 1
0053  79              73     77 	LD	A,C
0054  fe 1b           74     78 	CP	27		;last sector of track ?
0056  da 25 00        75     79 	JP	C,LSECT		;no, go read another
                      76     80 ;
                      77     81 ;	end of track, increment to next track
                      78     82 ;
0059  0e 01           79     83 	LD	C,1		;sector = 1
005b  04              80     84 	INC	B		;track = track + 1
005c  c3 25 00        81     85 	JP	LSECT		;for another group
                      82     86 ;
005f                  83     87 	END			;of boot loader
Z80-Assembler		Release 1.5				Page 3
Source file: boot.asm
Title:       Symboltable

BOOT     0100	COLD     0019	CONDAT   0001	CONT     004a	
DMAH     0010	DMAL     000f	DRIVE    000a	ERRMSG   0003	
FDCOP    000d	FDCST    000e	LSECT    0025	PRTMSG   003d	
SECTOR   000c	SECTS    0033	STOP     0048	TRACK    000b	
