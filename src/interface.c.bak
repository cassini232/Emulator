/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_Main (void)
{
  GtkWidget *Main;
  GtkWidget *vbox1;
  GtkWidget *menubar1;
  GtkWidget *menuitem1;
  GtkWidget *menuitem1_menu;
  GtkWidget *open1;
  GtkWidget *save1;
  GtkWidget *save_as1;
  GtkWidget *separatormenuitem1;
  GtkWidget *quit1;
  GtkWidget *ops1;
  GtkWidget *ops1_menu;
  GtkWidget *step1;
  GtkWidget *trace1;
  GtkWidget *go1;
  GtkWidget *separator2;
  GtkWidget *memory_fill1;
  GtkWidget *view1;
  GtkWidget *view1_menu;
  GtkWidget *ioport1;
  GtkWidget *log1;
  GtkWidget *menuitem4;
  GtkWidget *menuitem4_menu;
  GtkWidget *about1;
  GtkWidget *toolbar1;
  GtkIconSize tmp_toolbar_icon_size;
  GtkWidget *RunButton;
  GtkWidget *Trace_tool;
  GtkWidget *Step_tool;
  GtkWidget *Break_tool;
  GtkWidget *separatortoolitem1;
  GtkWidget *OpcodeButton;
  GtkWidget *hbox1;
  GtkWidget *vbox2;
  GtkWidget *Registers;
  GtkWidget *alignment1;
  GtkWidget *table2;
  GtkWidget *BC_Button;
  GSList *BC_Button_group = NULL;
  GtkWidget *DE_Button;
  GtkWidget *HL_Button;
  GtkWidget *IX_Button;
  GtkWidget *IY_Button;
  GtkWidget *PC_Button;
  GtkWidget *SP_Button;
  GtkWidget *label7;
  GtkWidget *label8;
  GtkWidget *label9;
  GtkWidget *A_REG_Entry;
  GtkWidget *BC_REG_Entry;
  GtkWidget *DE_REG_Entry;
  GtkWidget *HL_REG_Entry;
  GtkWidget *IX_REG_Entry;
  GtkWidget *IY_REG_Entry;
  GtkWidget *SP_REG_Entry;
  GtkWidget *PC_REG_Entry;
  GtkWidget *I_REG_Entry;
  GtkWidget *R_REG_Entry;
  GtkWidget *AA_REG_Entry;
  GtkWidget *ABC_REG_Entry;
  GtkWidget *ADE_REG_Entry;
  GtkWidget *AHL_REG_Entry;
  GtkWidget *label10;
  GtkWidget *label11;
  GtkWidget *label12;
  GtkWidget *label13;
  GtkWidget *Break_Button;
  GtkWidget *alignment9;
  GtkWidget *hbox7;
  GtkWidget *image9;
  GtkWidget *label18;
  GtkWidget *Mem_REG_Entry;
  GtkWidget *Mem_Button;
  GtkWidget *Synch_Memory_Button;
  GtkWidget *alignment8;
  GtkWidget *hbox6;
  GtkWidget *image8;
  GtkWidget *label17;
  GtkWidget *Reset_Button;
  GtkWidget *alignment10;
  GtkWidget *hbox8;
  GtkWidget *image10;
  GtkWidget *label19;
  GtkWidget *Zero_Button;
  GtkWidget *alignment11;
  GtkWidget *hbox9;
  GtkWidget *image11;
  GtkWidget *label20;
  GtkWidget *PC_Set_Button;
  GtkWidget *alignment12;
  GtkWidget *hbox11;
  GtkWidget *image12;
  GtkWidget *label22;
  GtkWidget *Clear_Break_Button;
  GtkWidget *alignment15;
  GtkWidget *hbox16;
  GtkWidget *image16;
  GtkWidget *label28;
  GtkWidget *SlowRunButton;
  GtkObject *SlowRunSpin_adj;
  GtkWidget *SlowRunSpin;
  GtkWidget *labelreg;
  GtkWidget *hbox2;
  GtkWidget *Update_REG_button;
  GtkWidget *Code_scroll_to_PC;
  GtkWidget *Flags;
  GtkWidget *alignment5;
  GtkWidget *table1;
  GtkWidget *buttonZ;
  GtkWidget *buttonY;
  GtkWidget *buttonH;
  GtkWidget *buttonX;
  GtkWidget *buttonP;
  GtkWidget *buttonN;
  GtkWidget *buttonC;
  GtkWidget *entry_S;
  GtkWidget *entry_c;
  GtkWidget *entry_N;
  GtkWidget *entry_P;
  GtkWidget *entry_X;
  GtkWidget *entry_H;
  GtkWidget *entry_Y;
  GtkWidget *entry_Z;
  GtkWidget *buttonS;
  GtkWidget *label5;
  GtkWidget *Memory;
  GtkWidget *alignment6;
  GtkWidget *scrolledwindow7;
  GtkWidget *Mem_text;
  GtkWidget *label6;
  GtkWidget *hbox3;
  GtkWidget *label14;
  GtkWidget *Mem_Addr_Entry;
  GtkWidget *label15;
  GtkWidget *Mem_Content_Entry;
  GtkWidget *Mem_Update_Button;
  GtkWidget *alignment7;
  GtkWidget *hbox5;
  GtkWidget *image7;
  GtkWidget *label16;
  GtkWidget *hbox4;
  GtkWidget *Mem_Step_Back;
  GtkWidget *image1;
  GtkWidget *Mem_Step_Fwd;
  GtkWidget *image2;
  GtkWidget *Mem_Row_Back;
  GtkWidget *image3;
  GtkWidget *Mem_Row_Fwd;
  GtkWidget *image4;
  GtkWidget *Mem_Page_Back;
  GtkWidget *image5;
  GtkWidget *Mem_Page_Fwd;
  GtkWidget *image6;
  GtkWidget *Code;
  GtkWidget *alignment2;
  GtkWidget *scrolledwindow3;
  GtkWidget *Code_Text;
  GtkWidget *label2;
  GtkAccelGroup *accel_group;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  accel_group = gtk_accel_group_new ();

  Main = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (Main), _("Z80 Emulator"));

  vbox1 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox1);
  gtk_container_add (GTK_CONTAINER (Main), vbox1);

  menubar1 = gtk_menu_bar_new ();
  gtk_widget_show (menubar1);
  gtk_box_pack_start (GTK_BOX (vbox1), menubar1, FALSE, FALSE, 0);

  menuitem1 = gtk_menu_item_new_with_mnemonic (_("_File"));
  gtk_widget_show (menuitem1);
  gtk_container_add (GTK_CONTAINER (menubar1), menuitem1);

  menuitem1_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem1), menuitem1_menu);

  open1 = gtk_image_menu_item_new_from_stock ("gtk-open", accel_group);
  gtk_widget_show (open1);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), open1);

  save1 = gtk_image_menu_item_new_from_stock ("gtk-save", accel_group);
  gtk_widget_show (save1);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), save1);

  save_as1 = gtk_image_menu_item_new_from_stock ("gtk-save-as", accel_group);
  gtk_widget_show (save_as1);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), save_as1);

  separatormenuitem1 = gtk_separator_menu_item_new ();
  gtk_widget_show (separatormenuitem1);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), separatormenuitem1);
  gtk_widget_set_sensitive (separatormenuitem1, FALSE);

  quit1 = gtk_image_menu_item_new_from_stock ("gtk-quit", accel_group);
  gtk_widget_show (quit1);
  gtk_container_add (GTK_CONTAINER (menuitem1_menu), quit1);

  ops1 = gtk_menu_item_new_with_mnemonic (_("_Ops"));
  gtk_widget_show (ops1);
  gtk_container_add (GTK_CONTAINER (menubar1), ops1);

  ops1_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (ops1), ops1_menu);

  step1 = gtk_menu_item_new_with_mnemonic (_("_Step"));
  gtk_widget_show (step1);
  gtk_container_add (GTK_CONTAINER (ops1_menu), step1);

  trace1 = gtk_menu_item_new_with_mnemonic (_("_Trace"));
  gtk_widget_show (trace1);
  gtk_container_add (GTK_CONTAINER (ops1_menu), trace1);

  go1 = gtk_menu_item_new_with_mnemonic (_("_Go"));
  gtk_widget_show (go1);
  gtk_container_add (GTK_CONTAINER (ops1_menu), go1);

  separator2 = gtk_separator_menu_item_new ();
  gtk_widget_show (separator2);
  gtk_container_add (GTK_CONTAINER (ops1_menu), separator2);
  gtk_widget_set_sensitive (separator2, FALSE);

  memory_fill1 = gtk_menu_item_new_with_mnemonic (_("Memory Fill..."));
  gtk_widget_show (memory_fill1);
  gtk_container_add (GTK_CONTAINER (ops1_menu), memory_fill1);

  view1 = gtk_menu_item_new_with_mnemonic (_("_View"));
  gtk_widget_show (view1);
  gtk_container_add (GTK_CONTAINER (menubar1), view1);

  view1_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (view1), view1_menu);

  ioport1 = gtk_check_menu_item_new_with_mnemonic (_("IOPort"));
  gtk_widget_show (ioport1);
  gtk_container_add (GTK_CONTAINER (view1_menu), ioport1);

  log1 = gtk_check_menu_item_new_with_mnemonic (_("Log"));
  gtk_widget_show (log1);
  gtk_container_add (GTK_CONTAINER (view1_menu), log1);

  menuitem4 = gtk_menu_item_new_with_mnemonic (_("_Help"));
  gtk_widget_show (menuitem4);
  gtk_container_add (GTK_CONTAINER (menubar1), menuitem4);

  menuitem4_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem4), menuitem4_menu);

  about1 = gtk_menu_item_new_with_mnemonic (_("_About"));
  gtk_widget_show (about1);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), about1);

  toolbar1 = gtk_toolbar_new ();
  gtk_widget_show (toolbar1);
  gtk_box_pack_start (GTK_BOX (vbox1), toolbar1, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar1), GTK_TOOLBAR_ICONS);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar1));

  RunButton = (GtkWidget*) gtk_toggle_tool_button_new_from_stock ("gtk-execute");
  gtk_widget_show (RunButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), RunButton);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (RunButton), tooltips, _("Run program from current PC."), NULL);

  Trace_tool = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-sort-descending");
  gtk_widget_show (Trace_tool);
  gtk_container_add (GTK_CONTAINER (toolbar1), Trace_tool);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (Trace_tool), tooltips, _("Do a trace run."), NULL);

  Step_tool = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-jump-to");
  gtk_widget_show (Step_tool);
  gtk_container_add (GTK_CONTAINER (toolbar1), Step_tool);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (Step_tool), tooltips, _("Single step."), NULL);

  Break_tool = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-dialog-warning");
  gtk_widget_show (Break_tool);
  gtk_container_add (GTK_CONTAINER (toolbar1), Break_tool);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (Break_tool), tooltips, _("Development data dump."), NULL);

  separatortoolitem1 = (GtkWidget*) gtk_separator_tool_item_new ();
  gtk_widget_show (separatortoolitem1);
  gtk_container_add (GTK_CONTAINER (toolbar1), separatortoolitem1);

  OpcodeButton = (GtkWidget*) gtk_toggle_tool_button_new_from_stock ("gtk-zoom-in");
  gtk_widget_show (OpcodeButton);
  gtk_container_add (GTK_CONTAINER (toolbar1), OpcodeButton);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (OpcodeButton), tooltips, _("Show/Hide machine code."), NULL);

  hbox1 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox1);
  gtk_box_pack_start (GTK_BOX (vbox1), hbox1, FALSE, FALSE, 0);

  vbox2 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox2);
  gtk_box_pack_start (GTK_BOX (hbox1), vbox2, TRUE, TRUE, 0);

  Registers = gtk_frame_new (NULL);
  gtk_widget_show (Registers);
  gtk_box_pack_start (GTK_BOX (vbox2), Registers, TRUE, TRUE, 0);
  gtk_frame_set_shadow_type (GTK_FRAME (Registers), GTK_SHADOW_NONE);

  alignment1 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment1);
  gtk_container_add (GTK_CONTAINER (Registers), alignment1);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment1), 0, 0, 12, 0);

  table2 = gtk_table_new (10, 5, FALSE);
  gtk_widget_show (table2);
  gtk_container_add (GTK_CONTAINER (alignment1), table2);
  gtk_container_set_border_width (GTK_CONTAINER (table2), 3);

  BC_Button = gtk_radio_button_new_with_mnemonic (NULL, _("BC"));
  gtk_widget_show (BC_Button);
  gtk_table_attach (GTK_TABLE (table2), BC_Button, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (BC_Button), BC_Button_group);
  BC_Button_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (BC_Button));

  DE_Button = gtk_radio_button_new_with_mnemonic (NULL, _("DE"));
  gtk_widget_show (DE_Button);
  gtk_table_attach (GTK_TABLE (table2), DE_Button, 0, 1, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (DE_Button), BC_Button_group);
  BC_Button_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (DE_Button));

  HL_Button = gtk_radio_button_new_with_mnemonic (NULL, _("HL"));
  gtk_widget_show (HL_Button);
  gtk_table_attach (GTK_TABLE (table2), HL_Button, 0, 1, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (HL_Button), BC_Button_group);
  BC_Button_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (HL_Button));

  IX_Button = gtk_radio_button_new_with_mnemonic (NULL, _("IX"));
  gtk_widget_show (IX_Button);
  gtk_table_attach (GTK_TABLE (table2), IX_Button, 0, 1, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (IX_Button), BC_Button_group);
  BC_Button_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (IX_Button));

  IY_Button = gtk_radio_button_new_with_mnemonic (NULL, _("IY"));
  gtk_widget_show (IY_Button);
  gtk_table_attach (GTK_TABLE (table2), IY_Button, 0, 1, 5, 6,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (IY_Button), BC_Button_group);
  BC_Button_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (IY_Button));

  PC_Button = gtk_radio_button_new_with_mnemonic (NULL, _("PC"));
  gtk_widget_show (PC_Button);
  gtk_table_attach (GTK_TABLE (table2), PC_Button, 0, 1, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (PC_Button), BC_Button_group);
  BC_Button_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (PC_Button));
  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (PC_Button), TRUE);

  SP_Button = gtk_radio_button_new_with_mnemonic (NULL, _("SP"));
  gtk_widget_show (SP_Button);
  gtk_table_attach (GTK_TABLE (table2), SP_Button, 0, 1, 7, 8,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (SP_Button), BC_Button_group);
  BC_Button_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (SP_Button));

  label7 = gtk_label_new (_("A"));
  gtk_widget_show (label7);
  gtk_table_attach (GTK_TABLE (table2), label7, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_misc_set_alignment (GTK_MISC (label7), 0.9, 0.5);
  gtk_label_set_width_chars (GTK_LABEL (label7), 3);
  gtk_label_set_single_line_mode (GTK_LABEL (label7), TRUE);

  label8 = gtk_label_new (_("I"));
  gtk_widget_show (label8);
  gtk_table_attach (GTK_TABLE (table2), label8, 0, 1, 8, 9,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_justify (GTK_LABEL (label8), GTK_JUSTIFY_CENTER);
  gtk_misc_set_alignment (GTK_MISC (label8), 0.8, 0.5);

  label9 = gtk_label_new (_("R"));
  gtk_widget_show (label9);
  gtk_table_attach (GTK_TABLE (table2), label9, 0, 1, 9, 10,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_justify (GTK_LABEL (label9), GTK_JUSTIFY_CENTER);
  gtk_misc_set_alignment (GTK_MISC (label9), 0.9, 0.5);

  A_REG_Entry = gtk_entry_new ();
  gtk_widget_show (A_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), A_REG_Entry, 1, 2, 0, 1,
                    (GtkAttachOptions) (0),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (A_REG_Entry), 2);
  gtk_entry_set_text (GTK_ENTRY (A_REG_Entry), _("00"));
  gtk_entry_set_invisible_char (GTK_ENTRY (A_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (A_REG_Entry), 4);

  BC_REG_Entry = gtk_entry_new ();
  gtk_widget_show (BC_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), BC_REG_Entry, 1, 2, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (BC_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (BC_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (BC_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (BC_REG_Entry), 4);

  DE_REG_Entry = gtk_entry_new ();
  gtk_widget_show (DE_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), DE_REG_Entry, 1, 2, 2, 3,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (DE_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (DE_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (DE_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (DE_REG_Entry), 4);

  HL_REG_Entry = gtk_entry_new ();
  gtk_widget_show (HL_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), HL_REG_Entry, 1, 2, 3, 4,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (HL_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (HL_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (HL_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (HL_REG_Entry), 4);

  IX_REG_Entry = gtk_entry_new ();
  gtk_widget_show (IX_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), IX_REG_Entry, 1, 2, 4, 5,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (IX_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (IX_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (IX_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (IX_REG_Entry), 4);

  IY_REG_Entry = gtk_entry_new ();
  gtk_widget_show (IY_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), IY_REG_Entry, 1, 2, 5, 6,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (IY_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (IY_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (IY_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (IY_REG_Entry), 4);

  SP_REG_Entry = gtk_entry_new ();
  gtk_widget_show (SP_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), SP_REG_Entry, 1, 2, 7, 8,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (SP_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (SP_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (SP_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (SP_REG_Entry), 4);

  PC_REG_Entry = gtk_entry_new ();
  gtk_widget_show (PC_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), PC_REG_Entry, 1, 2, 6, 7,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (PC_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (PC_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (PC_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (PC_REG_Entry), 4);

  I_REG_Entry = gtk_entry_new ();
  gtk_widget_show (I_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), I_REG_Entry, 1, 2, 8, 9,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_text (GTK_ENTRY (I_REG_Entry), _("00"));
  gtk_entry_set_invisible_char (GTK_ENTRY (I_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (I_REG_Entry), 4);

  R_REG_Entry = gtk_entry_new ();
  gtk_widget_show (R_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), R_REG_Entry, 1, 2, 9, 10,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_text (GTK_ENTRY (R_REG_Entry), _("00"));
  gtk_entry_set_invisible_char (GTK_ENTRY (R_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (R_REG_Entry), 4);

  AA_REG_Entry = gtk_entry_new ();
  gtk_widget_show (AA_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), AA_REG_Entry, 3, 4, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (AA_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (AA_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (AA_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (AA_REG_Entry), 4);

  ABC_REG_Entry = gtk_entry_new ();
  gtk_widget_show (ABC_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), ABC_REG_Entry, 3, 4, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (ABC_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (ABC_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (ABC_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (ABC_REG_Entry), 4);

  ADE_REG_Entry = gtk_entry_new ();
  gtk_widget_show (ADE_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), ADE_REG_Entry, 3, 4, 2, 3,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (ADE_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (ADE_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (ADE_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (ADE_REG_Entry), 4);

  AHL_REG_Entry = gtk_entry_new ();
  gtk_widget_show (AHL_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), AHL_REG_Entry, 3, 4, 3, 4,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (AHL_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (AHL_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (AHL_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (AHL_REG_Entry), 4);

  label10 = gtk_label_new (_("AF'"));
  gtk_widget_show (label10);
  gtk_table_attach (GTK_TABLE (table2), label10, 2, 3, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  GTK_WIDGET_SET_FLAGS (label10, GTK_CAN_FOCUS);
  gtk_label_set_justify (GTK_LABEL (label10), GTK_JUSTIFY_CENTER);
  gtk_label_set_selectable (GTK_LABEL (label10), TRUE);
  gtk_misc_set_alignment (GTK_MISC (label10), 0.9, 0.5);

  label11 = gtk_label_new (_("BC'"));
  gtk_widget_show (label11);
  gtk_table_attach (GTK_TABLE (table2), label11, 2, 3, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_justify (GTK_LABEL (label11), GTK_JUSTIFY_CENTER);
  gtk_misc_set_alignment (GTK_MISC (label11), 0.9, 0.5);

  label12 = gtk_label_new (_("DE'"));
  gtk_widget_show (label12);
  gtk_table_attach (GTK_TABLE (table2), label12, 2, 3, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_justify (GTK_LABEL (label12), GTK_JUSTIFY_CENTER);
  gtk_misc_set_alignment (GTK_MISC (label12), 0.9, 0.5);

  label13 = gtk_label_new (_("HL'"));
  gtk_widget_show (label13);
  gtk_table_attach (GTK_TABLE (table2), label13, 2, 3, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_justify (GTK_LABEL (label13), GTK_JUSTIFY_CENTER);
  gtk_misc_set_alignment (GTK_MISC (label13), 0.9, 0.5);

  Break_Button = gtk_button_new ();
  gtk_widget_show (Break_Button);
  gtk_table_attach (GTK_TABLE (table2), Break_Button, 4, 5, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, Break_Button, _("Adds a breakpoint to the selected code line."), NULL);
  gtk_button_set_focus_on_click (GTK_BUTTON (Break_Button), FALSE);

  alignment9 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment9);
  gtk_container_add (GTK_CONTAINER (Break_Button), alignment9);

  hbox7 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox7);
  gtk_container_add (GTK_CONTAINER (alignment9), hbox7);

  image9 = gtk_image_new_from_stock ("gtk-cancel", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image9);
  gtk_box_pack_start (GTK_BOX (hbox7), image9, FALSE, FALSE, 0);

  label18 = gtk_label_new_with_mnemonic (_("Break"));
  gtk_widget_show (label18);
  gtk_box_pack_start (GTK_BOX (hbox7), label18, FALSE, FALSE, 0);

  Mem_REG_Entry = gtk_entry_new ();
  gtk_widget_show (Mem_REG_Entry);
  gtk_table_attach (GTK_TABLE (table2), Mem_REG_Entry, 3, 4, 4, 5,
                    (GtkAttachOptions) (GTK_EXPAND),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_entry_set_max_length (GTK_ENTRY (Mem_REG_Entry), 4);
  gtk_entry_set_text (GTK_ENTRY (Mem_REG_Entry), _("0000"));
  gtk_entry_set_invisible_char (GTK_ENTRY (Mem_REG_Entry), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (Mem_REG_Entry), 4);

  Mem_Button = gtk_radio_button_new_with_mnemonic (NULL, _("Memory"));
  gtk_widget_show (Mem_Button);
  gtk_table_attach (GTK_TABLE (table2), Mem_Button, 2, 3, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (Mem_Button), BC_Button_group);
  BC_Button_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (Mem_Button));

  Synch_Memory_Button = gtk_button_new ();
  gtk_widget_show (Synch_Memory_Button);
  gtk_table_attach (GTK_TABLE (table2), Synch_Memory_Button, 4, 5, 4, 5,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, Synch_Memory_Button, _("Sets the 'Memory Register' to the address selected in the Memory window."), NULL);
  gtk_button_set_focus_on_click (GTK_BUTTON (Synch_Memory_Button), FALSE);

  alignment8 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment8);
  gtk_container_add (GTK_CONTAINER (Synch_Memory_Button), alignment8);

  hbox6 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox6);
  gtk_container_add (GTK_CONTAINER (alignment8), hbox6);

  image8 = gtk_image_new_from_stock ("gtk-indent", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image8);
  gtk_box_pack_start (GTK_BOX (hbox6), image8, FALSE, FALSE, 0);

  label17 = gtk_label_new_with_mnemonic (_("Synch"));
  gtk_widget_show (label17);
  gtk_box_pack_start (GTK_BOX (hbox6), label17, FALSE, FALSE, 0);

  Reset_Button = gtk_button_new ();
  gtk_widget_show (Reset_Button);
  gtk_table_attach (GTK_TABLE (table2), Reset_Button, 4, 5, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, Reset_Button, _("Resets the PC to start of code."), NULL);
  gtk_button_set_focus_on_click (GTK_BUTTON (Reset_Button), FALSE);

  alignment10 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment10);
  gtk_container_add (GTK_CONTAINER (Reset_Button), alignment10);

  hbox8 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox8);
  gtk_container_add (GTK_CONTAINER (alignment10), hbox8);

  image10 = gtk_image_new_from_stock ("gtk-redo", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image10);
  gtk_box_pack_start (GTK_BOX (hbox8), image10, FALSE, FALSE, 0);

  label19 = gtk_label_new_with_mnemonic (_("Restart"));
  gtk_widget_show (label19);
  gtk_box_pack_start (GTK_BOX (hbox8), label19, FALSE, FALSE, 0);

  Zero_Button = gtk_button_new ();
  gtk_widget_show (Zero_Button);
  gtk_table_attach (GTK_TABLE (table2), Zero_Button, 4, 5, 2, 3,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, Zero_Button, _("Sets all registers to zero."), NULL);
  gtk_button_set_focus_on_click (GTK_BUTTON (Zero_Button), FALSE);

  alignment11 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment11);
  gtk_container_add (GTK_CONTAINER (Zero_Button), alignment11);

  hbox9 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox9);
  gtk_container_add (GTK_CONTAINER (alignment11), hbox9);

  image11 = gtk_image_new_from_stock ("gtk-media-record", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image11);
  gtk_box_pack_start (GTK_BOX (hbox9), image11, FALSE, FALSE, 0);

  label20 = gtk_label_new_with_mnemonic (_("Zero Regs"));
  gtk_widget_show (label20);
  gtk_box_pack_start (GTK_BOX (hbox9), label20, FALSE, FALSE, 0);

  PC_Set_Button = gtk_button_new ();
  gtk_widget_show (PC_Set_Button);
  gtk_table_attach (GTK_TABLE (table2), PC_Set_Button, 4, 5, 6, 7,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, PC_Set_Button, _("Set the PC to the address of the selected code."), NULL);
  gtk_button_set_focus_on_click (GTK_BUTTON (PC_Set_Button), FALSE);

  alignment12 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment12);
  gtk_container_add (GTK_CONTAINER (PC_Set_Button), alignment12);

  hbox11 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox11);
  gtk_container_add (GTK_CONTAINER (alignment12), hbox11);

  image12 = gtk_image_new_from_stock ("gtk-media-next", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image12);
  gtk_box_pack_start (GTK_BOX (hbox11), image12, FALSE, FALSE, 0);

  label22 = gtk_label_new_with_mnemonic (_("Set PC"));
  gtk_widget_show (label22);
  gtk_box_pack_start (GTK_BOX (hbox11), label22, FALSE, FALSE, 0);

  Clear_Break_Button = gtk_button_new ();
  gtk_widget_show (Clear_Break_Button);
  gtk_table_attach (GTK_TABLE (table2), Clear_Break_Button, 4, 5, 3, 4,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, Clear_Break_Button, _("Clears the selected breakpoint."), NULL);
  gtk_button_set_focus_on_click (GTK_BUTTON (Clear_Break_Button), FALSE);

  alignment15 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment15);
  gtk_container_add (GTK_CONTAINER (Clear_Break_Button), alignment15);

  hbox16 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox16);
  gtk_container_add (GTK_CONTAINER (alignment15), hbox16);

  image16 = gtk_image_new_from_stock ("gtk-remove", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image16);
  gtk_box_pack_start (GTK_BOX (hbox16), image16, FALSE, FALSE, 0);

  label28 = gtk_label_new_with_mnemonic (_("Clear Break"));
  gtk_widget_show (label28);
  gtk_box_pack_start (GTK_BOX (hbox16), label28, FALSE, FALSE, 0);

  SlowRunButton = gtk_check_button_new_with_mnemonic (_("Run Slow (mS)"));
  gtk_widget_show (SlowRunButton);
  gtk_table_attach (GTK_TABLE (table2), SlowRunButton, 4, 5, 8, 9,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, SlowRunButton, _("Slow down code execution."), NULL);
  gtk_button_set_focus_on_click (GTK_BUTTON (SlowRunButton), FALSE);

  SlowRunSpin_adj = gtk_adjustment_new (20, 10, 10000, 10, 100, 100);
  SlowRunSpin = gtk_spin_button_new (GTK_ADJUSTMENT (SlowRunSpin_adj), 10, 0);
  gtk_widget_show (SlowRunSpin);
  gtk_table_attach (GTK_TABLE (table2), SlowRunSpin, 4, 5, 9, 10,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_tooltips_set_tip (tooltips, SlowRunSpin, _("Wait this many mS between instructions."), NULL);
  gtk_spin_button_set_numeric (GTK_SPIN_BUTTON (SlowRunSpin), TRUE);

  labelreg = gtk_label_new (_("<b>Registers</b>"));
  gtk_widget_show (labelreg);
  gtk_frame_set_label_widget (GTK_FRAME (Registers), labelreg);
  gtk_label_set_use_markup (GTK_LABEL (labelreg), TRUE);

  hbox2 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox2);
  gtk_box_pack_start (GTK_BOX (vbox2), hbox2, TRUE, TRUE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (hbox2), 5);

  Update_REG_button = gtk_button_new_with_mnemonic (_("Update Registers"));
  gtk_widget_show (Update_REG_button);
  gtk_box_pack_start (GTK_BOX (hbox2), Update_REG_button, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (Update_REG_button), FALSE);

  Code_scroll_to_PC = gtk_button_new_with_mnemonic (_("Scroll to PC"));
  gtk_widget_show (Code_scroll_to_PC);
  gtk_box_pack_start (GTK_BOX (hbox2), Code_scroll_to_PC, FALSE, FALSE, 0);
  gtk_tooltips_set_tip (tooltips, Code_scroll_to_PC, _("Scroll the code window to where the PC is pointing."), NULL);

  Flags = gtk_frame_new (NULL);
  gtk_widget_show (Flags);
  gtk_box_pack_start (GTK_BOX (vbox2), Flags, FALSE, TRUE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (Flags), 1);
  gtk_frame_set_shadow_type (GTK_FRAME (Flags), GTK_SHADOW_NONE);

  alignment5 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment5);
  gtk_container_add (GTK_CONTAINER (Flags), alignment5);
  gtk_container_set_border_width (GTK_CONTAINER (alignment5), 1);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment5), 0, 0, 12, 0);

  table1 = gtk_table_new (2, 8, TRUE);
  gtk_widget_show (table1);
  gtk_container_add (GTK_CONTAINER (alignment5), table1);
  gtk_container_set_border_width (GTK_CONTAINER (table1), 2);
  gtk_table_set_row_spacings (GTK_TABLE (table1), 2);
  gtk_table_set_col_spacings (GTK_TABLE (table1), 19);

  buttonZ = gtk_button_new_with_mnemonic (_("Z"));
  gtk_widget_show (buttonZ);
  gtk_table_attach (GTK_TABLE (table1), buttonZ, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (buttonZ), FALSE);

  buttonY = gtk_button_new_with_mnemonic (_("Y"));
  gtk_widget_show (buttonY);
  gtk_table_attach (GTK_TABLE (table1), buttonY, 2, 3, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (buttonY), FALSE);

  buttonH = gtk_button_new_with_mnemonic (_("H"));
  gtk_widget_show (buttonH);
  gtk_table_attach (GTK_TABLE (table1), buttonH, 3, 4, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (buttonH), FALSE);

  buttonX = gtk_button_new_with_mnemonic (_("X"));
  gtk_widget_show (buttonX);
  gtk_table_attach (GTK_TABLE (table1), buttonX, 4, 5, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (buttonX), FALSE);

  buttonP = gtk_button_new_with_mnemonic (_("P"));
  gtk_widget_show (buttonP);
  gtk_table_attach (GTK_TABLE (table1), buttonP, 5, 6, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (buttonP), FALSE);

  buttonN = gtk_button_new_with_mnemonic (_("N"));
  gtk_widget_show (buttonN);
  gtk_table_attach (GTK_TABLE (table1), buttonN, 6, 7, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (buttonN), FALSE);

  buttonC = gtk_button_new_with_mnemonic (_("C"));
  gtk_widget_show (buttonC);
  gtk_table_attach (GTK_TABLE (table1), buttonC, 7, 8, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (buttonC), FALSE);

  entry_S = gtk_label_new_with_mnemonic (_("1"));
  gtk_widget_show (entry_S);
  gtk_table_attach (GTK_TABLE (table1), entry_S, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_justify (GTK_LABEL (entry_S), GTK_JUSTIFY_CENTER);
  gtk_label_set_width_chars (GTK_LABEL (entry_S), 1);

  entry_c = gtk_label_new (_("0"));
  gtk_widget_show (entry_c);
  gtk_table_attach (GTK_TABLE (table1), entry_c, 7, 8, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_width_chars (GTK_LABEL (entry_c), 1);

  entry_N = gtk_label_new (_("0"));
  gtk_widget_show (entry_N);
  gtk_table_attach (GTK_TABLE (table1), entry_N, 6, 7, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_width_chars (GTK_LABEL (entry_N), 1);

  entry_P = gtk_label_new (_("0"));
  gtk_widget_show (entry_P);
  gtk_table_attach (GTK_TABLE (table1), entry_P, 5, 6, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_width_chars (GTK_LABEL (entry_P), 1);

  entry_X = gtk_label_new (_("0"));
  gtk_widget_show (entry_X);
  gtk_table_attach (GTK_TABLE (table1), entry_X, 4, 5, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_width_chars (GTK_LABEL (entry_X), 1);

  entry_H = gtk_label_new (_("0"));
  gtk_widget_show (entry_H);
  gtk_table_attach (GTK_TABLE (table1), entry_H, 3, 4, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_width_chars (GTK_LABEL (entry_H), 1);

  entry_Y = gtk_label_new (_("0"));
  gtk_widget_show (entry_Y);
  gtk_table_attach (GTK_TABLE (table1), entry_Y, 2, 3, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_width_chars (GTK_LABEL (entry_Y), 1);

  entry_Z = gtk_label_new (_("0"));
  gtk_widget_show (entry_Z);
  gtk_table_attach (GTK_TABLE (table1), entry_Z, 1, 2, 1, 2,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_label_set_width_chars (GTK_LABEL (entry_Z), 1);

  buttonS = gtk_button_new_with_mnemonic (_("S"));
  gtk_widget_show (buttonS);
  gtk_table_attach (GTK_TABLE (table1), buttonS, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (buttonS), FALSE);

  label5 = gtk_label_new (_("<b>Flags</b>"));
  gtk_widget_show (label5);
  gtk_frame_set_label_widget (GTK_FRAME (Flags), label5);
  gtk_label_set_use_markup (GTK_LABEL (label5), TRUE);

  Memory = gtk_frame_new (NULL);
  gtk_widget_show (Memory);
  gtk_box_pack_start (GTK_BOX (vbox2), Memory, TRUE, TRUE, 0);
  gtk_widget_set_size_request (Memory, -1, 245);
  gtk_container_set_border_width (GTK_CONTAINER (Memory), 1);
  gtk_frame_set_shadow_type (GTK_FRAME (Memory), GTK_SHADOW_NONE);

  alignment6 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment6);
  gtk_container_add (GTK_CONTAINER (Memory), alignment6);
  gtk_container_set_border_width (GTK_CONTAINER (alignment6), 1);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment6), 0, 0, 12, 0);

  scrolledwindow7 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow7);
  gtk_container_add (GTK_CONTAINER (alignment6), scrolledwindow7);
  gtk_widget_set_size_request (scrolledwindow7, 293, -1);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow7), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow7), GTK_SHADOW_IN);

  Mem_text = gtk_text_view_new ();
  gtk_widget_show (Mem_text);
  gtk_container_add (GTK_CONTAINER (scrolledwindow7), Mem_text);
  gtk_container_set_border_width (GTK_CONTAINER (Mem_text), 1);
  gtk_text_view_set_overwrite (GTK_TEXT_VIEW (Mem_text), TRUE);
  gtk_text_view_set_accepts_tab (GTK_TEXT_VIEW (Mem_text), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (Mem_text), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (Mem_text)), _("0000: 00 00 00 00 00 00 00 00 XXXXXXXX"), -1);

  label6 = gtk_label_new (_("<b>Memory</b>"));
  gtk_widget_show (label6);
  gtk_frame_set_label_widget (GTK_FRAME (Memory), label6);
  gtk_label_set_use_markup (GTK_LABEL (label6), TRUE);

  hbox3 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox3);
  gtk_box_pack_end (GTK_BOX (vbox2), hbox3, FALSE, FALSE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (hbox3), 3);

  label14 = gtk_label_new (_("<b>Address</b>"));
  gtk_widget_show (label14);
  gtk_box_pack_start (GTK_BOX (hbox3), label14, FALSE, FALSE, 10);
  gtk_label_set_use_markup (GTK_LABEL (label14), TRUE);

  Mem_Addr_Entry = gtk_entry_new ();
  gtk_widget_show (Mem_Addr_Entry);
  gtk_box_pack_start (GTK_BOX (hbox3), Mem_Addr_Entry, FALSE, FALSE, 0);
  gtk_entry_set_max_length (GTK_ENTRY (Mem_Addr_Entry), 4);
  gtk_editable_set_editable (GTK_EDITABLE (Mem_Addr_Entry), FALSE);
  gtk_entry_set_text (GTK_ENTRY (Mem_Addr_Entry), _("0000"));
  gtk_entry_set_has_frame (GTK_ENTRY (Mem_Addr_Entry), FALSE);
  gtk_entry_set_invisible_char (GTK_ENTRY (Mem_Addr_Entry), 9679);
  gtk_entry_set_activates_default (GTK_ENTRY (Mem_Addr_Entry), TRUE);
  gtk_entry_set_width_chars (GTK_ENTRY (Mem_Addr_Entry), 4);

  label15 = gtk_label_new (_("<b>Content</b>"));
  gtk_widget_show (label15);
  gtk_box_pack_start (GTK_BOX (hbox3), label15, FALSE, FALSE, 10);
  gtk_label_set_use_markup (GTK_LABEL (label15), TRUE);

  Mem_Content_Entry = gtk_entry_new ();
  gtk_widget_show (Mem_Content_Entry);
  gtk_box_pack_start (GTK_BOX (hbox3), Mem_Content_Entry, FALSE, FALSE, 0);
  gtk_entry_set_max_length (GTK_ENTRY (Mem_Content_Entry), 2);
  gtk_entry_set_text (GTK_ENTRY (Mem_Content_Entry), _("00"));
  gtk_entry_set_invisible_char (GTK_ENTRY (Mem_Content_Entry), 9679);
  gtk_entry_set_activates_default (GTK_ENTRY (Mem_Content_Entry), TRUE);
  gtk_entry_set_width_chars (GTK_ENTRY (Mem_Content_Entry), 3);

  Mem_Update_Button = gtk_button_new ();
  gtk_widget_show (Mem_Update_Button);
  gtk_box_pack_start (GTK_BOX (hbox3), Mem_Update_Button, FALSE, FALSE, 20);
  gtk_button_set_focus_on_click (GTK_BUTTON (Mem_Update_Button), FALSE);

  alignment7 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment7);
  gtk_container_add (GTK_CONTAINER (Mem_Update_Button), alignment7);

  hbox5 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox5);
  gtk_container_add (GTK_CONTAINER (alignment7), hbox5);

  image7 = gtk_image_new_from_stock ("gtk-refresh", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image7);
  gtk_box_pack_start (GTK_BOX (hbox5), image7, FALSE, FALSE, 0);

  label16 = gtk_label_new_with_mnemonic (_("Update"));
  gtk_widget_show (label16);
  gtk_box_pack_start (GTK_BOX (hbox5), label16, FALSE, FALSE, 0);

  hbox4 = gtk_hbox_new (TRUE, 0);
  gtk_widget_show (hbox4);
  gtk_box_pack_start (GTK_BOX (vbox2), hbox4, FALSE, FALSE, 0);

  Mem_Step_Back = gtk_button_new ();
  gtk_widget_show (Mem_Step_Back);
  gtk_box_pack_start (GTK_BOX (hbox4), Mem_Step_Back, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (Mem_Step_Back), FALSE);

  image1 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image1);
  gtk_container_add (GTK_CONTAINER (Mem_Step_Back), image1);

  Mem_Step_Fwd = gtk_button_new ();
  gtk_widget_show (Mem_Step_Fwd);
  gtk_box_pack_start (GTK_BOX (hbox4), Mem_Step_Fwd, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (Mem_Step_Fwd), FALSE);

  image2 = gtk_image_new_from_stock ("gtk-go-forward", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image2);
  gtk_container_add (GTK_CONTAINER (Mem_Step_Fwd), image2);

  Mem_Row_Back = gtk_button_new ();
  gtk_widget_show (Mem_Row_Back);
  gtk_box_pack_start (GTK_BOX (hbox4), Mem_Row_Back, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (Mem_Row_Back), FALSE);

  image3 = gtk_image_new_from_stock ("gtk-go-up", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image3);
  gtk_container_add (GTK_CONTAINER (Mem_Row_Back), image3);

  Mem_Row_Fwd = gtk_button_new ();
  gtk_widget_show (Mem_Row_Fwd);
  gtk_box_pack_start (GTK_BOX (hbox4), Mem_Row_Fwd, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (Mem_Row_Fwd), FALSE);

  image4 = gtk_image_new_from_stock ("gtk-go-down", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image4);
  gtk_container_add (GTK_CONTAINER (Mem_Row_Fwd), image4);

  Mem_Page_Back = gtk_button_new ();
  gtk_widget_show (Mem_Page_Back);
  gtk_box_pack_start (GTK_BOX (hbox4), Mem_Page_Back, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (Mem_Page_Back), FALSE);

  image5 = gtk_image_new_from_stock ("gtk-sort-ascending", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image5);
  gtk_container_add (GTK_CONTAINER (Mem_Page_Back), image5);

  Mem_Page_Fwd = gtk_button_new ();
  gtk_widget_show (Mem_Page_Fwd);
  gtk_box_pack_start (GTK_BOX (hbox4), Mem_Page_Fwd, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (Mem_Page_Fwd), FALSE);

  image6 = gtk_image_new_from_stock ("gtk-sort-descending", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image6);
  gtk_container_add (GTK_CONTAINER (Mem_Page_Fwd), image6);

  Code = gtk_frame_new (NULL);
  gtk_widget_show (Code);
  gtk_box_pack_start (GTK_BOX (hbox1), Code, TRUE, TRUE, 0);
  gtk_widget_set_size_request (Code, -1, 194);
  gtk_container_set_border_width (GTK_CONTAINER (Code), 2);
  gtk_frame_set_shadow_type (GTK_FRAME (Code), GTK_SHADOW_NONE);

  alignment2 = gtk_alignment_new (0.5, 0.5, 1, 1);
  gtk_widget_show (alignment2);
  gtk_container_add (GTK_CONTAINER (Code), alignment2);
  gtk_widget_set_size_request (alignment2, 324, 54);
  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment2), 0, 0, 5, 0);

  scrolledwindow3 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow3);
  gtk_container_add (GTK_CONTAINER (alignment2), scrolledwindow3);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow3), GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow3), GTK_SHADOW_IN);

  Code_Text = gtk_text_view_new ();
  gtk_widget_show (Code_Text);
  gtk_container_add (GTK_CONTAINER (scrolledwindow3), Code_Text);
  gtk_container_set_border_width (GTK_CONTAINER (Code_Text), 1);
  gtk_widget_set_events (Code_Text, GDK_KEY_PRESS_MASK);
  gtk_widget_set_extension_events (Code_Text, GDK_EXTENSION_EVENTS_CURSOR);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (Code_Text), FALSE);
  gtk_text_view_set_accepts_tab (GTK_TEXT_VIEW (Code_Text), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (Code_Text), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (Code_Text)), _("\342\200\253\342\200\254*  >  0000: XX XX XX XX\tLD\t\tBC,0230H\n"), -1);

  label2 = gtk_label_new (_("<b>Code</b>"));
  gtk_widget_show (label2);
  gtk_frame_set_label_widget (GTK_FRAME (Code), label2);
  gtk_label_set_use_markup (GTK_LABEL (label2), TRUE);

  g_signal_connect ((gpointer) Main, "delete_event",
                    G_CALLBACK (gtk_main_quit),
                    NULL);
  g_signal_connect ((gpointer) open1, "activate",
                    G_CALLBACK (on_open1_activate),
                    NULL);
  g_signal_connect ((gpointer) save1, "activate",
                    G_CALLBACK (on_save1_activate),
                    NULL);
  g_signal_connect ((gpointer) save_as1, "activate",
                    G_CALLBACK (on_save_as1_activate),
                    NULL);
  g_signal_connect ((gpointer) quit1, "activate",
                    G_CALLBACK (on_quit1_activate),
                    NULL);
  g_signal_connect ((gpointer) ops1, "activate",
                    G_CALLBACK (on_ops1_activate),
                    NULL);
  g_signal_connect ((gpointer) step1, "activate",
                    G_CALLBACK (on_step1_activate),
                    NULL);
  g_signal_connect ((gpointer) trace1, "activate",
                    G_CALLBACK (on_trace1_activate),
                    NULL);
  g_signal_connect ((gpointer) go1, "activate",
                    G_CALLBACK (on_go1_activate),
                    NULL);
  g_signal_connect ((gpointer) memory_fill1, "activate",
                    G_CALLBACK (on_memory_fill1_activate),
                    NULL);
  g_signal_connect ((gpointer) view1, "activate",
                    G_CALLBACK (on_view1_activate),
                    NULL);
  g_signal_connect ((gpointer) ioport1, "activate",
                    G_CALLBACK (on_ioport1_activate),
                    NULL);
  g_signal_connect ((gpointer) log1, "activate",
                    G_CALLBACK (on_log1_activate),
                    NULL);
  g_signal_connect ((gpointer) about1, "activate",
                    G_CALLBACK (on_about1_activate),
                    NULL);
  g_signal_connect ((gpointer) RunButton, "toggled",
                    G_CALLBACK (on_RunButton_toggled),
                    NULL);
  g_signal_connect ((gpointer) Trace_tool, "clicked",
                    G_CALLBACK (on_Trace_tool_clicked),
                    NULL);
  g_signal_connect ((gpointer) Step_tool, "clicked",
                    G_CALLBACK (on_Step_tool_clicked),
                    NULL);
  g_signal_connect ((gpointer) Break_tool, "clicked",
                    G_CALLBACK (on_Break_tool_clicked),
                    NULL);
  g_signal_connect ((gpointer) OpcodeButton, "toggled",
                    G_CALLBACK (on_OpcodeButton_toggled),
                    NULL);
  g_signal_connect ((gpointer) BC_Button, "toggled",
                    G_CALLBACK (on_BC_Button_toggled),
                    NULL);
  g_signal_connect ((gpointer) DE_Button, "toggled",
                    G_CALLBACK (on_DE_Button_toggled),
                    NULL);
  g_signal_connect ((gpointer) HL_Button, "toggled",
                    G_CALLBACK (on_HL_Button_toggled),
                    NULL);
  g_signal_connect ((gpointer) IX_Button, "toggled",
                    G_CALLBACK (on_IX_Button_toggled),
                    NULL);
  g_signal_connect ((gpointer) IY_Button, "toggled",
                    G_CALLBACK (on_IY_Button_toggled),
                    NULL);
  g_signal_connect ((gpointer) PC_Button, "toggled",
                    G_CALLBACK (on_PC_Button_toggled),
                    NULL);
  g_signal_connect ((gpointer) SP_Button, "toggled",
                    G_CALLBACK (on_SP_Button_toggled),
                    NULL);
  g_signal_connect ((gpointer) Break_Button, "clicked",
                    G_CALLBACK (on_Break_Button_clicked),
                    NULL);
  g_signal_connect ((gpointer) Mem_Button, "toggled",
                    G_CALLBACK (on_Mem_Button_toggled),
                    NULL);
  g_signal_connect ((gpointer) Synch_Memory_Button, "clicked",
                    G_CALLBACK (on_Synch_Memory_Button_clicked),
                    NULL);
  g_signal_connect ((gpointer) Reset_Button, "clicked",
                    G_CALLBACK (on_Reset_Button_clicked),
                    NULL);
  g_signal_connect ((gpointer) Zero_Button, "clicked",
                    G_CALLBACK (on_Zero_Button_clicked),
                    NULL);
  g_signal_connect ((gpointer) PC_Set_Button, "clicked",
                    G_CALLBACK (on_PC_Set_Button_clicked),
                    NULL);
  g_signal_connect ((gpointer) Clear_Break_Button, "clicked",
                    G_CALLBACK (on_Clear_Break_Button_clicked),
                    NULL);
  g_signal_connect ((gpointer) SlowRunButton, "toggled",
                    G_CALLBACK (on_SlowRunButton_toggled),
                    NULL);
  g_signal_connect ((gpointer) SlowRunSpin, "value_changed",
                    G_CALLBACK (on_SlowRunSpin_value_changed),
                    NULL);
  g_signal_connect ((gpointer) Update_REG_button, "clicked",
                    G_CALLBACK (on_Update_REG_button_clicked),
                    NULL);
  g_signal_connect ((gpointer) Code_scroll_to_PC, "clicked",
                    G_CALLBACK (on_Code_scroll_to_PC_clicked),
                    NULL);
  g_signal_connect ((gpointer) buttonZ, "clicked",
                    G_CALLBACK (on_buttonZ_clicked),
                    NULL);
  g_signal_connect ((gpointer) buttonY, "clicked",
                    G_CALLBACK (on_buttonY_clicked),
                    NULL);
  g_signal_connect ((gpointer) buttonH, "clicked",
                    G_CALLBACK (on_buttonH_clicked),
                    NULL);
  g_signal_connect ((gpointer) buttonX, "clicked",
                    G_CALLBACK (on_buttonX_clicked),
                    NULL);
  g_signal_connect ((gpointer) buttonP, "clicked",
                    G_CALLBACK (on_buttonP_clicked),
                    NULL);
  g_signal_connect ((gpointer) buttonN, "clicked",
                    G_CALLBACK (on_buttonN_clicked),
                    NULL);
  g_signal_connect ((gpointer) buttonC, "clicked",
                    G_CALLBACK (on_buttonC_clicked),
                    NULL);
  g_signal_connect ((gpointer) buttonS, "clicked",
                    G_CALLBACK (on_buttonS_clicked),
                    NULL);
  g_signal_connect ((gpointer) Mem_text, "button_release_event",
                    G_CALLBACK (on_Mem_text_button_release_event),
                    NULL);
  g_signal_connect ((gpointer) Mem_Update_Button, "clicked",
                    G_CALLBACK (on_Mem_Update_Button_clicked),
                    NULL);
  g_signal_connect ((gpointer) Mem_Step_Back, "clicked",
                    G_CALLBACK (on_Mem_Step_Back_clicked),
                    NULL);
  g_signal_connect ((gpointer) Mem_Step_Fwd, "clicked",
                    G_CALLBACK (on_Mem_Step_Fwd_clicked),
                    NULL);
  g_signal_connect ((gpointer) Mem_Row_Back, "clicked",
                    G_CALLBACK (on_Mem_Row_Back_clicked),
                    NULL);
  g_signal_connect ((gpointer) Mem_Row_Fwd, "clicked",
                    G_CALLBACK (on_Mem_Row_Fwd_clicked),
                    NULL);
  g_signal_connect ((gpointer) Mem_Page_Back, "clicked",
                    G_CALLBACK (on_Mem_Page_Back_clicked),
                    NULL);
  g_signal_connect ((gpointer) Mem_Page_Fwd, "clicked",
                    G_CALLBACK (on_Mem_Page_Fwd_clicked),
                    NULL);
  g_signal_connect ((gpointer) Code_Text, "button_release_event",
                    G_CALLBACK (on_Code_Text_button_release_event),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (Main, Main, "Main");
  GLADE_HOOKUP_OBJECT (Main, vbox1, "vbox1");
  GLADE_HOOKUP_OBJECT (Main, menubar1, "menubar1");
  GLADE_HOOKUP_OBJECT (Main, menuitem1, "menuitem1");
  GLADE_HOOKUP_OBJECT (Main, menuitem1_menu, "menuitem1_menu");
  GLADE_HOOKUP_OBJECT (Main, open1, "open1");
  GLADE_HOOKUP_OBJECT (Main, save1, "save1");
  GLADE_HOOKUP_OBJECT (Main, save_as1, "save_as1");
  GLADE_HOOKUP_OBJECT (Main, separatormenuitem1, "separatormenuitem1");
  GLADE_HOOKUP_OBJECT (Main, quit1, "quit1");
  GLADE_HOOKUP_OBJECT (Main, ops1, "ops1");
  GLADE_HOOKUP_OBJECT (Main, ops1_menu, "ops1_menu");
  GLADE_HOOKUP_OBJECT (Main, step1, "step1");
  GLADE_HOOKUP_OBJECT (Main, trace1, "trace1");
  GLADE_HOOKUP_OBJECT (Main, go1, "go1");
  GLADE_HOOKUP_OBJECT (Main, separator2, "separator2");
  GLADE_HOOKUP_OBJECT (Main, memory_fill1, "memory_fill1");
  GLADE_HOOKUP_OBJECT (Main, view1, "view1");
  GLADE_HOOKUP_OBJECT (Main, view1_menu, "view1_menu");
  GLADE_HOOKUP_OBJECT (Main, ioport1, "ioport1");
  GLADE_HOOKUP_OBJECT (Main, log1, "log1");
  GLADE_HOOKUP_OBJECT (Main, menuitem4, "menuitem4");
  GLADE_HOOKUP_OBJECT (Main, menuitem4_menu, "menuitem4_menu");
  GLADE_HOOKUP_OBJECT (Main, about1, "about1");
  GLADE_HOOKUP_OBJECT (Main, toolbar1, "toolbar1");
  GLADE_HOOKUP_OBJECT (Main, RunButton, "RunButton");
  GLADE_HOOKUP_OBJECT (Main, Trace_tool, "Trace_tool");
  GLADE_HOOKUP_OBJECT (Main, Step_tool, "Step_tool");
  GLADE_HOOKUP_OBJECT (Main, Break_tool, "Break_tool");
  GLADE_HOOKUP_OBJECT (Main, separatortoolitem1, "separatortoolitem1");
  GLADE_HOOKUP_OBJECT (Main, OpcodeButton, "OpcodeButton");
  GLADE_HOOKUP_OBJECT (Main, hbox1, "hbox1");
  GLADE_HOOKUP_OBJECT (Main, vbox2, "vbox2");
  GLADE_HOOKUP_OBJECT (Main, Registers, "Registers");
  GLADE_HOOKUP_OBJECT (Main, alignment1, "alignment1");
  GLADE_HOOKUP_OBJECT (Main, table2, "table2");
  GLADE_HOOKUP_OBJECT (Main, BC_Button, "BC_Button");
  GLADE_HOOKUP_OBJECT (Main, DE_Button, "DE_Button");
  GLADE_HOOKUP_OBJECT (Main, HL_Button, "HL_Button");
  GLADE_HOOKUP_OBJECT (Main, IX_Button, "IX_Button");
  GLADE_HOOKUP_OBJECT (Main, IY_Button, "IY_Button");
  GLADE_HOOKUP_OBJECT (Main, PC_Button, "PC_Button");
  GLADE_HOOKUP_OBJECT (Main, SP_Button, "SP_Button");
  GLADE_HOOKUP_OBJECT (Main, label7, "label7");
  GLADE_HOOKUP_OBJECT (Main, label8, "label8");
  GLADE_HOOKUP_OBJECT (Main, label9, "label9");
  GLADE_HOOKUP_OBJECT (Main, A_REG_Entry, "A_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, BC_REG_Entry, "BC_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, DE_REG_Entry, "DE_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, HL_REG_Entry, "HL_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, IX_REG_Entry, "IX_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, IY_REG_Entry, "IY_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, SP_REG_Entry, "SP_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, PC_REG_Entry, "PC_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, I_REG_Entry, "I_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, R_REG_Entry, "R_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, AA_REG_Entry, "AA_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, ABC_REG_Entry, "ABC_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, ADE_REG_Entry, "ADE_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, AHL_REG_Entry, "AHL_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, label10, "label10");
  GLADE_HOOKUP_OBJECT (Main, label11, "label11");
  GLADE_HOOKUP_OBJECT (Main, label12, "label12");
  GLADE_HOOKUP_OBJECT (Main, label13, "label13");
  GLADE_HOOKUP_OBJECT (Main, Break_Button, "Break_Button");
  GLADE_HOOKUP_OBJECT (Main, alignment9, "alignment9");
  GLADE_HOOKUP_OBJECT (Main, hbox7, "hbox7");
  GLADE_HOOKUP_OBJECT (Main, image9, "image9");
  GLADE_HOOKUP_OBJECT (Main, label18, "label18");
  GLADE_HOOKUP_OBJECT (Main, Mem_REG_Entry, "Mem_REG_Entry");
  GLADE_HOOKUP_OBJECT (Main, Mem_Button, "Mem_Button");
  GLADE_HOOKUP_OBJECT (Main, Synch_Memory_Button, "Synch_Memory_Button");
  GLADE_HOOKUP_OBJECT (Main, alignment8, "alignment8");
  GLADE_HOOKUP_OBJECT (Main, hbox6, "hbox6");
  GLADE_HOOKUP_OBJECT (Main, image8, "image8");
  GLADE_HOOKUP_OBJECT (Main, label17, "label17");
  GLADE_HOOKUP_OBJECT (Main, Reset_Button, "Reset_Button");
  GLADE_HOOKUP_OBJECT (Main, alignment10, "alignment10");
  GLADE_HOOKUP_OBJECT (Main, hbox8, "hbox8");
  GLADE_HOOKUP_OBJECT (Main, image10, "image10");
  GLADE_HOOKUP_OBJECT (Main, label19, "label19");
  GLADE_HOOKUP_OBJECT (Main, Zero_Button, "Zero_Button");
  GLADE_HOOKUP_OBJECT (Main, alignment11, "alignment11");
  GLADE_HOOKUP_OBJECT (Main, hbox9, "hbox9");
  GLADE_HOOKUP_OBJECT (Main, image11, "image11");
  GLADE_HOOKUP_OBJECT (Main, label20, "label20");
  GLADE_HOOKUP_OBJECT (Main, PC_Set_Button, "PC_Set_Button");
  GLADE_HOOKUP_OBJECT (Main, alignment12, "alignment12");
  GLADE_HOOKUP_OBJECT (Main, hbox11, "hbox11");
  GLADE_HOOKUP_OBJECT (Main, image12, "image12");
  GLADE_HOOKUP_OBJECT (Main, label22, "label22");
  GLADE_HOOKUP_OBJECT (Main, Clear_Break_Button, "Clear_Break_Button");
  GLADE_HOOKUP_OBJECT (Main, alignment15, "alignment15");
  GLADE_HOOKUP_OBJECT (Main, hbox16, "hbox16");
  GLADE_HOOKUP_OBJECT (Main, image16, "image16");
  GLADE_HOOKUP_OBJECT (Main, label28, "label28");
  GLADE_HOOKUP_OBJECT (Main, SlowRunButton, "SlowRunButton");
  GLADE_HOOKUP_OBJECT (Main, SlowRunSpin, "SlowRunSpin");
  GLADE_HOOKUP_OBJECT (Main, labelreg, "labelreg");
  GLADE_HOOKUP_OBJECT (Main, hbox2, "hbox2");
  GLADE_HOOKUP_OBJECT (Main, Update_REG_button, "Update_REG_button");
  GLADE_HOOKUP_OBJECT (Main, Code_scroll_to_PC, "Code_scroll_to_PC");
  GLADE_HOOKUP_OBJECT (Main, Flags, "Flags");
  GLADE_HOOKUP_OBJECT (Main, alignment5, "alignment5");
  GLADE_HOOKUP_OBJECT (Main, table1, "table1");
  GLADE_HOOKUP_OBJECT (Main, buttonZ, "buttonZ");
  GLADE_HOOKUP_OBJECT (Main, buttonY, "buttonY");
  GLADE_HOOKUP_OBJECT (Main, buttonH, "buttonH");
  GLADE_HOOKUP_OBJECT (Main, buttonX, "buttonX");
  GLADE_HOOKUP_OBJECT (Main, buttonP, "buttonP");
  GLADE_HOOKUP_OBJECT (Main, buttonN, "buttonN");
  GLADE_HOOKUP_OBJECT (Main, buttonC, "buttonC");
  GLADE_HOOKUP_OBJECT (Main, entry_S, "entry_S");
  GLADE_HOOKUP_OBJECT (Main, entry_c, "entry_c");
  GLADE_HOOKUP_OBJECT (Main, entry_N, "entry_N");
  GLADE_HOOKUP_OBJECT (Main, entry_P, "entry_P");
  GLADE_HOOKUP_OBJECT (Main, entry_X, "entry_X");
  GLADE_HOOKUP_OBJECT (Main, entry_H, "entry_H");
  GLADE_HOOKUP_OBJECT (Main, entry_Y, "entry_Y");
  GLADE_HOOKUP_OBJECT (Main, entry_Z, "entry_Z");
  GLADE_HOOKUP_OBJECT (Main, buttonS, "buttonS");
  GLADE_HOOKUP_OBJECT (Main, label5, "label5");
  GLADE_HOOKUP_OBJECT (Main, Memory, "Memory");
  GLADE_HOOKUP_OBJECT (Main, alignment6, "alignment6");
  GLADE_HOOKUP_OBJECT (Main, scrolledwindow7, "scrolledwindow7");
  GLADE_HOOKUP_OBJECT (Main, Mem_text, "Mem_text");
  GLADE_HOOKUP_OBJECT (Main, label6, "label6");
  GLADE_HOOKUP_OBJECT (Main, hbox3, "hbox3");
  GLADE_HOOKUP_OBJECT (Main, label14, "label14");
  GLADE_HOOKUP_OBJECT (Main, Mem_Addr_Entry, "Mem_Addr_Entry");
  GLADE_HOOKUP_OBJECT (Main, label15, "label15");
  GLADE_HOOKUP_OBJECT (Main, Mem_Content_Entry, "Mem_Content_Entry");
  GLADE_HOOKUP_OBJECT (Main, Mem_Update_Button, "Mem_Update_Button");
  GLADE_HOOKUP_OBJECT (Main, alignment7, "alignment7");
  GLADE_HOOKUP_OBJECT (Main, hbox5, "hbox5");
  GLADE_HOOKUP_OBJECT (Main, image7, "image7");
  GLADE_HOOKUP_OBJECT (Main, label16, "label16");
  GLADE_HOOKUP_OBJECT (Main, hbox4, "hbox4");
  GLADE_HOOKUP_OBJECT (Main, Mem_Step_Back, "Mem_Step_Back");
  GLADE_HOOKUP_OBJECT (Main, image1, "image1");
  GLADE_HOOKUP_OBJECT (Main, Mem_Step_Fwd, "Mem_Step_Fwd");
  GLADE_HOOKUP_OBJECT (Main, image2, "image2");
  GLADE_HOOKUP_OBJECT (Main, Mem_Row_Back, "Mem_Row_Back");
  GLADE_HOOKUP_OBJECT (Main, image3, "image3");
  GLADE_HOOKUP_OBJECT (Main, Mem_Row_Fwd, "Mem_Row_Fwd");
  GLADE_HOOKUP_OBJECT (Main, image4, "image4");
  GLADE_HOOKUP_OBJECT (Main, Mem_Page_Back, "Mem_Page_Back");
  GLADE_HOOKUP_OBJECT (Main, image5, "image5");
  GLADE_HOOKUP_OBJECT (Main, Mem_Page_Fwd, "Mem_Page_Fwd");
  GLADE_HOOKUP_OBJECT (Main, image6, "image6");
  GLADE_HOOKUP_OBJECT (Main, Code, "Code");
  GLADE_HOOKUP_OBJECT (Main, alignment2, "alignment2");
  GLADE_HOOKUP_OBJECT (Main, scrolledwindow3, "scrolledwindow3");
  GLADE_HOOKUP_OBJECT (Main, Code_Text, "Code_Text");
  GLADE_HOOKUP_OBJECT (Main, label2, "label2");
  GLADE_HOOKUP_OBJECT_NO_REF (Main, tooltips, "tooltips");

  gtk_widget_grab_focus (scrolledwindow7);
  gtk_window_add_accel_group (GTK_WINDOW (Main), accel_group);

  return Main;
}

GtkWidget*
create_File_Chooser (void)
{
  GtkWidget *File_Chooser;
  GtkWidget *dialog_vbox1;
  GtkWidget *dialog_action_area1;
  GtkWidget *File_Cancel_Button;
  GtkWidget *File_Open_Button;

  File_Chooser = gtk_file_chooser_dialog_new (_("Load File"), NULL, GTK_FILE_CHOOSER_ACTION_OPEN, NULL);
  gtk_container_set_border_width (GTK_CONTAINER (File_Chooser), 5);
  gtk_window_set_type_hint (GTK_WINDOW (File_Chooser), GDK_WINDOW_TYPE_HINT_DIALOG);

  dialog_vbox1 = GTK_DIALOG (File_Chooser)->vbox;
  gtk_widget_show (dialog_vbox1);

  dialog_action_area1 = GTK_DIALOG (File_Chooser)->action_area;
  gtk_widget_show (dialog_action_area1);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (dialog_action_area1), GTK_BUTTONBOX_END);

  File_Cancel_Button = gtk_button_new_from_stock ("gtk-cancel");
  gtk_widget_show (File_Cancel_Button);
  gtk_dialog_add_action_widget (GTK_DIALOG (File_Chooser), File_Cancel_Button, GTK_RESPONSE_CANCEL);
  GTK_WIDGET_SET_FLAGS (File_Cancel_Button, GTK_CAN_DEFAULT);

  File_Open_Button = gtk_button_new_from_stock ("gtk-open");
  gtk_widget_show (File_Open_Button);
  gtk_dialog_add_action_widget (GTK_DIALOG (File_Chooser), File_Open_Button, GTK_RESPONSE_OK);
  GTK_WIDGET_SET_FLAGS (File_Open_Button, GTK_CAN_DEFAULT);

  g_signal_connect ((gpointer) File_Cancel_Button, "clicked",
                    G_CALLBACK (on_File_Cancel_Button_clicked),
                    NULL);
  g_signal_connect ((gpointer) File_Open_Button, "clicked",
                    G_CALLBACK (on_File_Open_Button_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (File_Chooser, File_Chooser, "File_Chooser");
  GLADE_HOOKUP_OBJECT_NO_REF (File_Chooser, dialog_vbox1, "dialog_vbox1");
  GLADE_HOOKUP_OBJECT_NO_REF (File_Chooser, dialog_action_area1, "dialog_action_area1");
  GLADE_HOOKUP_OBJECT (File_Chooser, File_Cancel_Button, "File_Cancel_Button");
  GLADE_HOOKUP_OBJECT (File_Chooser, File_Open_Button, "File_Open_Button");

  gtk_widget_grab_default (File_Open_Button);
  return File_Chooser;
}

GtkWidget*
create_Log (void)
{
  GtkWidget *Log;
  GtkWidget *scrolledwindow8;
  GtkWidget *Log_Text;

  Log = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (Log, 590, 232);
  gtk_window_set_title (GTK_WINDOW (Log), _("Z80 Emulator Log"));

  scrolledwindow8 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow8);
  gtk_container_add (GTK_CONTAINER (Log), scrolledwindow8);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow8), GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);

  Log_Text = gtk_text_view_new ();
  gtk_widget_show (Log_Text);
  gtk_container_add (GTK_CONTAINER (scrolledwindow8), Log_Text);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (Log_Text), FALSE);
  gtk_text_view_set_accepts_tab (GTK_TEXT_VIEW (Log_Text), FALSE);
  gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (Log_Text), FALSE);
  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (Log_Text)), _("Start Log:\n"), -1);

  g_signal_connect ((gpointer) Log, "delete_event",
                    G_CALLBACK (on_Log_delete_event),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (Log, Log, "Log");
  GLADE_HOOKUP_OBJECT (Log, scrolledwindow8, "scrolledwindow8");
  GLADE_HOOKUP_OBJECT (Log, Log_Text, "Log_Text");

  return Log;
}

GtkWidget*
create_About_Dialog (void)
{
  GtkWidget *About_Dialog;
  /* TRANSLATORS: Replace this string with your names, one name per line. */
  gchar *translators = _("translator-credits");

  About_Dialog = gtk_about_dialog_new ();
  gtk_container_set_border_width (GTK_CONTAINER (About_Dialog), 5);
  gtk_about_dialog_set_version (GTK_ABOUT_DIALOG (About_Dialog), VERSION);
  gtk_about_dialog_set_name (GTK_ABOUT_DIALOG (About_Dialog), _("Emulator"));
  gtk_about_dialog_set_copyright (GTK_ABOUT_DIALOG (About_Dialog), _("Copyright (c) 2008 Udo Munk and Justin Clancy"));
  gtk_about_dialog_set_comments (GTK_ABOUT_DIALOG (About_Dialog), _("Z80 emulator by Udo Munk. GUI addons by Justin Clancy."));
  gtk_about_dialog_set_license (GTK_ABOUT_DIALOG (About_Dialog), _("GPL 2.0"));
  gtk_about_dialog_set_translator_credits (GTK_ABOUT_DIALOG (About_Dialog), translators);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (About_Dialog, About_Dialog, "About_Dialog");

  return About_Dialog;
}

GtkWidget*
create_IOWIN (void)
{
  GtkWidget *IOWIN;
  GtkWidget *vbox3;
  GtkWidget *scrolledwindow9;
  GtkWidget *IOPortText;
  GtkWidget *hbox10;
  GtkWidget *IOASCII;
  GSList *IOASCII_group = NULL;
  GtkWidget *IOHex;
  GtkWidget *vseparator1;
  GtkWidget *label21;
  GtkObject *PortSpin_adj;
  GtkWidget *PortSpin;
  GtkWidget *hseparator1;
  GtkWidget *hbox17;
  GtkWidget *In_Port_Prompt;
  GtkWidget *In_Port_Data;
  GtkWidget *In_Port_Submit;

  IOWIN = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (IOWIN, 355, 355);
  gtk_window_set_title (GTK_WINDOW (IOWIN), _("Z80 I/O Port"));
  gtk_window_set_destroy_with_parent (GTK_WINDOW (IOWIN), TRUE);

  vbox3 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox3);
  gtk_container_add (GTK_CONTAINER (IOWIN), vbox3);

  scrolledwindow9 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow9);
  gtk_box_pack_start (GTK_BOX (vbox3), scrolledwindow9, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow9), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow9), GTK_SHADOW_ETCHED_OUT);

  IOPortText = gtk_text_view_new ();
  gtk_widget_show (IOPortText);
  gtk_container_add (GTK_CONTAINER (scrolledwindow9), IOPortText);
  gtk_widget_set_size_request (IOPortText, 200, 300);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (IOPortText), FALSE);
  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (IOPortText), GTK_WRAP_WORD);

  hbox10 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox10);
  gtk_box_pack_start (GTK_BOX (vbox3), hbox10, TRUE, TRUE, 0);

  IOASCII = gtk_radio_button_new_with_mnemonic (NULL, _("ASCII"));
  gtk_widget_show (IOASCII);
  gtk_box_pack_start (GTK_BOX (hbox10), IOASCII, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (IOASCII), FALSE);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (IOASCII), IOASCII_group);
  IOASCII_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (IOASCII));

  IOHex = gtk_radio_button_new_with_mnemonic (NULL, _("Hex"));
  gtk_widget_show (IOHex);
  gtk_box_pack_start (GTK_BOX (hbox10), IOHex, FALSE, FALSE, 0);
  gtk_button_set_focus_on_click (GTK_BUTTON (IOHex), FALSE);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (IOHex), IOASCII_group);
  IOASCII_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (IOHex));

  vseparator1 = gtk_vseparator_new ();
  gtk_widget_show (vseparator1);
  gtk_box_pack_start (GTK_BOX (hbox10), vseparator1, TRUE, TRUE, 20);

  label21 = gtk_label_new (_("<b>Port</b>"));
  gtk_widget_show (label21);
  gtk_box_pack_start (GTK_BOX (hbox10), label21, FALSE, FALSE, 0);
  gtk_label_set_use_markup (GTK_LABEL (label21), TRUE);

  PortSpin_adj = gtk_adjustment_new (0, 0, 255, 1, 10, 10);
  PortSpin = gtk_spin_button_new (GTK_ADJUSTMENT (PortSpin_adj), 1, 0);
  gtk_widget_show (PortSpin);
  gtk_box_pack_start (GTK_BOX (hbox10), PortSpin, FALSE, FALSE, 8);
  gtk_spin_button_set_numeric (GTK_SPIN_BUTTON (PortSpin), TRUE);

  hseparator1 = gtk_hseparator_new ();
  gtk_widget_show (hseparator1);
  gtk_box_pack_start (GTK_BOX (vbox3), hseparator1, TRUE, TRUE, 5);

  hbox17 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox17);
  gtk_box_pack_start (GTK_BOX (vbox3), hbox17, TRUE, TRUE, 0);

  In_Port_Prompt = gtk_entry_new ();
  gtk_widget_show (In_Port_Prompt);
  gtk_box_pack_start (GTK_BOX (hbox17), In_Port_Prompt, FALSE, FALSE, 0);
  GTK_WIDGET_UNSET_FLAGS (In_Port_Prompt, GTK_CAN_FOCUS);
  gtk_editable_set_editable (GTK_EDITABLE (In_Port_Prompt), FALSE);
  gtk_entry_set_text (GTK_ENTRY (In_Port_Prompt), _("No Input Required"));
  gtk_entry_set_has_frame (GTK_ENTRY (In_Port_Prompt), FALSE);

  In_Port_Data = gtk_entry_new ();
  gtk_widget_show (In_Port_Data);
  gtk_box_pack_start (GTK_BOX (hbox17), In_Port_Data, FALSE, FALSE, 0);
  gtk_entry_set_max_length (GTK_ENTRY (In_Port_Data), 2);
  gtk_entry_set_text (GTK_ENTRY (In_Port_Data), _("XX"));
  gtk_entry_set_width_chars (GTK_ENTRY (In_Port_Data), 4);

  In_Port_Submit = gtk_button_new_with_mnemonic (_("Submit Input"));
  gtk_widget_show (In_Port_Submit);
  gtk_box_pack_start (GTK_BOX (hbox17), In_Port_Submit, FALSE, FALSE, 6);

  g_signal_connect ((gpointer) IOWIN, "destroy",
                    G_CALLBACK (on_IOWIN_destroy),
                    NULL);
  g_signal_connect ((gpointer) IOASCII, "toggled",
                    G_CALLBACK (on_IOASCII_toggled),
                    NULL);
  g_signal_connect ((gpointer) IOHex, "toggled",
                    G_CALLBACK (on_IOHex_toggled),
                    NULL);
  g_signal_connect ((gpointer) PortSpin, "value_changed",
                    G_CALLBACK (on_PortSpin_value_changed),
                    NULL);
  g_signal_connect ((gpointer) In_Port_Submit, "clicked",
                    G_CALLBACK (on_In_Port_Submit_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (IOWIN, IOWIN, "IOWIN");
  GLADE_HOOKUP_OBJECT (IOWIN, vbox3, "vbox3");
  GLADE_HOOKUP_OBJECT (IOWIN, scrolledwindow9, "scrolledwindow9");
  GLADE_HOOKUP_OBJECT (IOWIN, IOPortText, "IOPortText");
  GLADE_HOOKUP_OBJECT (IOWIN, hbox10, "hbox10");
  GLADE_HOOKUP_OBJECT (IOWIN, IOASCII, "IOASCII");
  GLADE_HOOKUP_OBJECT (IOWIN, IOHex, "IOHex");
  GLADE_HOOKUP_OBJECT (IOWIN, vseparator1, "vseparator1");
  GLADE_HOOKUP_OBJECT (IOWIN, label21, "label21");
  GLADE_HOOKUP_OBJECT (IOWIN, PortSpin, "PortSpin");
  GLADE_HOOKUP_OBJECT (IOWIN, hseparator1, "hseparator1");
  GLADE_HOOKUP_OBJECT (IOWIN, hbox17, "hbox17");
  GLADE_HOOKUP_OBJECT (IOWIN, In_Port_Prompt, "In_Port_Prompt");
  GLADE_HOOKUP_OBJECT (IOWIN, In_Port_Data, "In_Port_Data");
  GLADE_HOOKUP_OBJECT (IOWIN, In_Port_Submit, "In_Port_Submit");

  gtk_widget_grab_default (IOWIN);
  return IOWIN;
}

GtkWidget*
create_Fill_Memory (void)
{
  GtkWidget *Fill_Memory;
  GtkWidget *vbox4;
  GtkWidget *hbox12;
  GtkWidget *label23;
  GtkWidget *entry3;
  GtkWidget *label24;
  GtkWidget *entry4;
  GtkWidget *label25;
  GtkWidget *entry5;
  GtkWidget *hbox13;
  GtkWidget *button5;
  GtkWidget *alignment13;
  GtkWidget *hbox14;
  GtkWidget *image14;
  GtkWidget *label26;
  GtkWidget *button6;
  GtkWidget *alignment14;
  GtkWidget *hbox15;
  GtkWidget *image15;
  GtkWidget *label27;

  Fill_Memory = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (Fill_Memory), _("Fill Memory"));
  gtk_window_set_resizable (GTK_WINDOW (Fill_Memory), FALSE);

  vbox4 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox4);
  gtk_container_add (GTK_CONTAINER (Fill_Memory), vbox4);

  hbox12 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox12);
  gtk_box_pack_start (GTK_BOX (vbox4), hbox12, TRUE, TRUE, 7);

  label23 = gtk_label_new (_("From"));
  gtk_widget_show (label23);
  gtk_box_pack_start (GTK_BOX (hbox12), label23, TRUE, FALSE, 6);

  entry3 = gtk_entry_new ();
  gtk_widget_show (entry3);
  gtk_box_pack_start (GTK_BOX (hbox12), entry3, TRUE, TRUE, 6);
  gtk_entry_set_max_length (GTK_ENTRY (entry3), 4);
  gtk_entry_set_invisible_char (GTK_ENTRY (entry3), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (entry3), 4);

  label24 = gtk_label_new (_("To"));
  gtk_widget_show (label24);
  gtk_box_pack_start (GTK_BOX (hbox12), label24, FALSE, FALSE, 6);

  entry4 = gtk_entry_new ();
  gtk_widget_show (entry4);
  gtk_box_pack_start (GTK_BOX (hbox12), entry4, TRUE, TRUE, 6);
  gtk_entry_set_max_length (GTK_ENTRY (entry4), 4);
  gtk_entry_set_invisible_char (GTK_ENTRY (entry4), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (entry4), 4);

  label25 = gtk_label_new (_("With"));
  gtk_widget_show (label25);
  gtk_box_pack_start (GTK_BOX (hbox12), label25, FALSE, FALSE, 6);

  entry5 = gtk_entry_new ();
  gtk_widget_show (entry5);
  gtk_box_pack_start (GTK_BOX (hbox12), entry5, TRUE, TRUE, 6);
  gtk_entry_set_max_length (GTK_ENTRY (entry5), 2);
  gtk_entry_set_invisible_char (GTK_ENTRY (entry5), 9679);
  gtk_entry_set_width_chars (GTK_ENTRY (entry5), 2);

  hbox13 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox13);
  gtk_box_pack_start (GTK_BOX (vbox4), hbox13, TRUE, TRUE, 7);

  button5 = gtk_button_new ();
  gtk_widget_show (button5);
  gtk_box_pack_start (GTK_BOX (hbox13), button5, TRUE, TRUE, 6);

  alignment13 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment13);
  gtk_container_add (GTK_CONTAINER (button5), alignment13);

  hbox14 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox14);
  gtk_container_add (GTK_CONTAINER (alignment13), hbox14);

  image14 = gtk_image_new_from_stock ("gtk-yes", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image14);
  gtk_box_pack_start (GTK_BOX (hbox14), image14, FALSE, FALSE, 0);

  label26 = gtk_label_new_with_mnemonic (_("OK"));
  gtk_widget_show (label26);
  gtk_box_pack_start (GTK_BOX (hbox14), label26, FALSE, FALSE, 0);

  button6 = gtk_button_new ();
  gtk_widget_show (button6);
  gtk_box_pack_start (GTK_BOX (hbox13), button6, TRUE, TRUE, 6);

  alignment14 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment14);
  gtk_container_add (GTK_CONTAINER (button6), alignment14);

  hbox15 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox15);
  gtk_container_add (GTK_CONTAINER (alignment14), hbox15);

  image15 = gtk_image_new_from_stock ("gtk-cancel", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image15);
  gtk_box_pack_start (GTK_BOX (hbox15), image15, FALSE, FALSE, 0);

  label27 = gtk_label_new_with_mnemonic (_("Cancel"));
  gtk_widget_show (label27);
  gtk_box_pack_start (GTK_BOX (hbox15), label27, FALSE, FALSE, 0);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (Fill_Memory, Fill_Memory, "Fill_Memory");
  GLADE_HOOKUP_OBJECT (Fill_Memory, vbox4, "vbox4");
  GLADE_HOOKUP_OBJECT (Fill_Memory, hbox12, "hbox12");
  GLADE_HOOKUP_OBJECT (Fill_Memory, label23, "label23");
  GLADE_HOOKUP_OBJECT (Fill_Memory, entry3, "entry3");
  GLADE_HOOKUP_OBJECT (Fill_Memory, label24, "label24");
  GLADE_HOOKUP_OBJECT (Fill_Memory, entry4, "entry4");
  GLADE_HOOKUP_OBJECT (Fill_Memory, label25, "label25");
  GLADE_HOOKUP_OBJECT (Fill_Memory, entry5, "entry5");
  GLADE_HOOKUP_OBJECT (Fill_Memory, hbox13, "hbox13");
  GLADE_HOOKUP_OBJECT (Fill_Memory, button5, "button5");
  GLADE_HOOKUP_OBJECT (Fill_Memory, alignment13, "alignment13");
  GLADE_HOOKUP_OBJECT (Fill_Memory, hbox14, "hbox14");
  GLADE_HOOKUP_OBJECT (Fill_Memory, image14, "image14");
  GLADE_HOOKUP_OBJECT (Fill_Memory, label26, "label26");
  GLADE_HOOKUP_OBJECT (Fill_Memory, button6, "button6");
  GLADE_HOOKUP_OBJECT (Fill_Memory, alignment14, "alignment14");
  GLADE_HOOKUP_OBJECT (Fill_Memory, hbox15, "hbox15");
  GLADE_HOOKUP_OBJECT (Fill_Memory, image15, "image15");
  GLADE_HOOKUP_OBJECT (Fill_Memory, label27, "label27");

  return Fill_Memory;
}

